/*Question 1:
Retrieve the total number of rentals made in the Sakila database.
Hint: Use the COUNT() function.*/
select count(rental_id) as total_number_of_rentals from rental;

/*
Question 2:
Find the average rental duration (in days) of movies rented from the Sakila database.
Hint: Utilize the AVG() function. */
select * from rental;
select avg(datediff(return_date,rental_date)) from rental;

/*
Question 3:
Display the first name and last name of customers in uppercase.
Hint: Use the UPPER () function.*/
select upper(first_name),upper(first_name) from customer;

/*Question 4:
Extract the month from the rental date and display it alongside the rental ID.
Hint: Employ the MONTH() function.*/
select rental_id , month(rental_date) from rental;

/*Question 5:
Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
Hint: Use COUNT () in conjunction with GROUP BY.*/
select customer_id,count(rental_id) from rental group by customer_id;

/*Question 6:
Find the total revenue generated by each store.
Hint: Combine SUM() and GROUP BY.*/
SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id;



/**Question 7:
Display the title of the movie, customer s first name, and last name who rented it.
Hint: Use JOIN between the film, inventory, rental, and customer tables.*/
SELECT 
    c.first_name, c.last_name, f.title
FROM
    film AS f
        INNER JOIN
    inventory AS i ON f.film_id = i.film_id
        INNER JOIN
    rental AS r ON i.inventory_id = r.inventory_id
        INNER JOIN
    customer AS c ON r.customer_id = c.customer_id;
    
/*Question 8:
Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
Hint: Use JOIN between the film actor, film, and actor tables.*/
SELECT 
    a.first_name, a.last_name
FROM
    actor AS a
        INNER JOIN
    film_actor AS fa ON a.actor_id = fa.actor_id
        INNER JOIN
    film AS f ON fa.film_id = f.film_id
WHERE
    f.title = 'Gone with the Wind';
    
/*GROUP BY:
Question 1:
Determine the total number of rentals for each category of movies.
*/
SELECT 
    fc.category_id,COUNT(rental_id) AS total_number_of_rentals
FROM
    rental AS r
        JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        JOIN
    film_category AS fc ON i.film_id = fc.film_id
GROUP BY fc.category_id;

/* Question 2:
Find the average rental rate of movies in each language.
 */
 select * from language;
 select * from film;
 select l.name,avg(f.rental_rate) as average_rental_rate from film as f right join language as l on f.language_id=l.language_id group by l.name;
 
 /*Joins:
 Question 3:
Retrieve the customer names along with the total amount they've spent on rentals.
*/
SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    SUM(p.amount) AS total_amount_spent
FROM
    customer AS c
        LEFT JOIN
    payment AS p ON c.customer_id = p.customer_id
        JOIN
    rental AS r ON c.customer_id = r.customer_id
GROUP BY c.customer_id;

/*Question 4:
List the titles of movies rented by each customer in a particular city (e.g., 'London').
Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.*/
SELECT 
    f.title, c.first_name, c.last_name
FROM
    customer AS c
        JOIN
    address AS a ON c.address_id = a.address_id
        JOIN
    city AS ci ON a.city_id = ci.city_id
        JOIN
    rental AS r ON c.customer_id = r.customer_id
        JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        JOIN
    film AS f ON i.film_id = f.film_id
WHERE
    ci.city = 'London'
ORDER BY c.first_name , c.last_name , f.title;

/*Question 5:
Display the top 5 rented movies along with the number of times they've been rented.
Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results.*/
select f.title, count(*)as rental_count from film as f join inventory as i on f.film_id=i.film_id join rental as r on i.inventory_id=r.inventory_id group by f.title limit 5;

/*Question 6:
Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.*/
select c.customer_id,c.first_name,c.last_name from customer as c join rental as r on c.customer_id=r.customer_id join inventory as i on i.inventory_id= r.inventory_id where i.store_id in (1,2) group by c.first_name,c.last_name,c.customer_id having count(distinct i.store_id)=2 order by customer_id ;




 





